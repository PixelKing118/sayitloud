<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="/styles.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= post.title %></title>
</head>
<body>

    <div class="form-container">
        <h1><%= post.title %></h1>
        <p><%= post.content %></p>
        <p>Posted on: <%= post.createdAt.toDateString() %></p>
        
        <div class="comment-buttons">
            <button class="comment-button" onclick="toggleCommentBox('<%= post._id %>')">Comment</button>
            <!-- You can add another button for replying if needed -->
            <!-- <button class="reply-button">Reply</button> -->
        </div>
    
        <!-- Comment input area that toggles visibility -->
        <div class="comment-input-container" id="comment-input-<%= post._id %>" style="display: none;">
            <input type="text" class="comment-input" placeholder="Your comment here...">
            <button class="submit-comment-button" onclick="submitComment('<%= post._id %>')">Submit</button>
        </div>
    
        <h2>Comments:</h2>
        <ul id="comments-list-<%= post._id %>">
            <% post.comments.forEach(function(comment) { %>
                <li><%= comment.author %>: <%= comment.text %></li>
            <% }); %>
        </ul>
        
        <div class="comment-input-container" id="comment-input-<%= post._id %>">
            <input type="text" class="comment-input" placeholder="Your comment here...">
            <button class="submit-comment-button" onclick="submitComment('<%= post._id %>')">Submit</button>
        </div>
        
    </div>
    
    <script>
        function toggleCommentBox(postId) {
            const commentInputContainer = document.getElementById(`comment-input-${postId}`);
            commentInputContainer.style.display = commentInputContainer.style.display === 'none' ? 'block' : 'none';
        }
    
        function submitComment(postId) {
            const commentInput = document.querySelector(`#comment-input-${postId} .comment-input`);
            const commentText = commentInput.value;

            if (commentText.trim() === "") {
                alert("Comment cannot be empty!"); // Optional: alert if input is empty
                return;
            }

            // Make a POST request to submit the comment
            fetch(`/posts/${postId}/comment`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    commentText: commentText,
                    commentAuthor: "Anonymous" // You can modify this to collect user info if needed
                }),
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Network response was not ok");
                }
                return response.json();
            })
            .then(data => {
                console.log('Success:', data);
                commentInput.value = ''; // Reset input field after submission

                // Create a new list item for the comment
                const commentsList = document.querySelector(`#comments-list-${postId}`);
                const newCommentItem = document.createElement('li');
                newCommentItem.textContent = `${data.commentAuthor}: ${commentText}`;
                commentsList.appendChild(newCommentItem); // Add the new comment to the list
            })
            .catch((error) => {
                console.error('Error:', error);
            });
        }
    </script>

</body>
</html>