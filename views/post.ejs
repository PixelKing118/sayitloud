<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="/styles.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= post.title %></title>
</head>
<body>

    <div class="form-container">
        <h1><%= post.title %></h1>
        <p><%= post.content %></p>
        <p2>Posted on: <%= post.createdAt.toDateString() %></p2>
        
        <h2>Comments:</h2>
        <ul id="comments-list-<%= post._id %>">
            <% post.comments.forEach(function(comment) { %>
                <li class="comment-item" id="comment-<%= comment._id %>">
                    <div class="comment-content">
                        <span class="comment-author"><%= comment.author %></span>: <span class="comment-text"><%= comment.text %></span>
                        <button class="reply-button" onclick="toggleReplyInput('<%= post._id %>', '<%= comment._id %>')">Reply</button>
                    </div>
                    <div class="reply-input-container" id="reply-input-<%= post._id %>-<%= comment._id %>" style="display: none;">
                        <input type="text" class="reply-input" placeholder="Your reply here...">
                        <button class="submit-reply-button" onclick="submitReply('<%= post._id %>', '<%= comment._id %>')">Submit</button>
                    </div>
                    <ul class="replies-list" id="replies-list-<%= comment._id %>">
                        <% if (comment.replies) { %>
                            <% comment.replies.forEach(function(reply) { %>
                                <li class="reply-item">
                                    <div class="reply-content">
                                        <span class="reply-author"><%= reply.author %></span>: <span class="reply-text"><%= reply.text %></span>
                                        <button class="reply-button" onclick="toggleReplyInput('<%= post._id %>', '<%= comment._id %>', true)">Reply</button>
                                    </div>
                                    <div class="reply-input-container" id="reply-input-<%= post._id %>-<%= comment._id %>-<%= reply._id %>" style="display: none;">
                                        <input type="text" class="reply-input" placeholder="Your reply here...">
                                        <button class="submit-reply-button" onclick="submitReply('<%= post._id %>', '<%= comment._id %>', '<%= reply._id %>')">Submit</button>
                                    </div>
                                </li>
                            <% }); %>
                        <% } %>
                    </ul>
                </li>
            <% }); %>
        </ul>

        <div class="comment-input-container">
            <input type="text" class="comment-input" placeholder="Your comment here...">
            <button class="submit-comment-button" onclick="submitComment('<%= post._id %>')">Submit</button>
        </div>
        
    </div>
    
    <script>
        function toggleReplyInput(postId, commentId, isNestedReply = false) {
            const replyInputContainer = isNestedReply 
                ? document.getElementById(`reply-input-${postId}-${commentId}-${Math.random().toString(36).substr(2, 9)}`)
                : document.getElementById(`reply-input-${postId}-${commentId}`);
            replyInputContainer.style.display = replyInputContainer.style.display === 'none' ? 'block' : 'none';
        }
    
        function submitComment(postId) {
            const commentInput = document.querySelector(`#comments-list-${postId} .comment-input`);
            const commentText = commentInput.value;

            if (commentText.trim() === "") {
                alert("Comment cannot be empty!");
                return;
            }

            fetch(`/posts/${postId}/comment`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    commentText: commentText,
                    commentAuthor: "Anonymous"
                }),
            })
            .then(response => {
                if (!response.ok) throw new Error("Network response was not ok");
                return response.json();
            })
            .then(data => {
                commentInput.value = '';
                const commentsList = document.querySelector(`#comments-list-${postId}`);
                const newCommentItem = document.createElement('li');
                newCommentItem.id = `comment-${data.commentId}`;
                newCommentItem.className = 'comment-item';
                newCommentItem.innerHTML = `
                    <div class="comment-content">
                        <span class="comment-author">${data.commentAuthor}</span>: <span class="comment-text">${commentText}</span>
                        <button class="reply-button" onclick="toggleReplyInput('${postId}', '${data.commentId}')">Reply</button>
                    </div>
                    <div class="reply-input-container" id="reply-input-${postId}-${data.commentId}" style="display: none;">
                        <input type="text" class="reply-input" placeholder="Your reply here...">
                        <button class="submit-reply-button" onclick="submitReply('${postId}', '${data.commentId}')">Submit</button>
                    </div>
                    <ul class="replies-list" id="replies-list-${data.commentId}"></ul>
                `;
                commentsList.appendChild(newCommentItem);
            })
            .catch((error) => console.error('Error:', error));
        }

        function submitReply(postId, commentId, parentId) {
            const replyInput = parentId 
                ? document.querySelector(`#reply-input-${postId}-${commentId}-${parentId} .reply-input`)
                : document.querySelector(`#reply-input-${postId}-${commentId} .reply-input`);
            const replyText = replyInput.value;

            if (replyText.trim() === "") {
                alert("Reply cannot be empty!");
                return;
            }

            fetch(`/posts/${postId}/comment/${commentId}/reply`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    replyText: replyText,
                    replyAuthor: "Anonymous"
                }),
            })
            .then(response => {
                if (!response.ok) throw new Error("Network response was not ok");
                return response.json();
            })
            .then(data => {
                replyInput.value = '';
                const repliesList = document.querySelector(`#replies-list-${commentId}`);
                const newReplyItem = document.createElement('li');
                newReplyItem.className = 'reply-item';
                newReplyItem.innerHTML = `
                    <div class="reply-content">
                        <span class="reply-author">${data.replyAuthor}</span>: <span class="reply-text">${replyText}</span>
                        <button class="reply-button" onclick="toggleReplyInput('${postId}', '${commentId}', true)">Reply</button>
                    </div>
                    <div class="reply-input-container" id="reply-input-${postId}-${commentId}-${Math.random().toString(36).substr(2, 9)}" style="display: none;">
                        <input type="text" class="reply-input" placeholder="Your reply here...">
                        <button class="submit-reply-button" onclick="submitReply('${postId}', '${commentId}', '${data.replyId}')">Submit</button>
                    </div>
                `;
                repliesList.appendChild(newReplyItem);
            })
            .catch((error) => console.error('Error:', error));
        }
    </script>

</body>
</html>
